spring.application.name=channel-event-aggregator

spring.kafka.bootstrap-servers=localhost:9092
spring.cloud.stream.kafka.binder.brokers=${spring.kafka.bootstrap-servers}
spring.cloud.stream.kafka.streams.binder.application-id=channel-event-aggregator-app
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.auto.offset.reset=earliest
spring.cloud.stream.kafka.streams.binder.configuration.processing.guarantee=exactly_once_v2
spring.cloud.stream.kafka.streams.binder.configuration.state.dir=F:/tmp/kafka-streams/${HOSTNAME}
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=100
spring.cloud.stream.kafka.streams.binder.configuration.enable.idempotence=false

#spring.cloud.stream.kafka.streams.binder.configuration.spring.json.trusted.packages=org.example.calleventproducerservice.model

spring.cloud.stream.function.definition=processChannelEvents
spring.cloud.function.scan.enabled=false

spring.cloud.stream.bindings.processChannelEvents-in-0.destination=channel-event-aggregator-input1
spring.cloud.stream.bindings.processChannelEvents-in-0.content-type=application/json
spring.cloud.stream.bindings.processChannelEvents-in-0.group=channel-event-aggregator-consumer-group
spring.cloud.stream.kafka.bindings.processChannelEvents-in-0.consumer.enableDlq=false

spring.cloud.stream.bindings.processChannelEvents-out-0.destination=channel-event-aggregator-output
spring.cloud.stream.bindings.processChannelEvents-out-0.content-type=application/json
spring.cloud.stream.kafka.bindings.processChannelEvents-out-0.consumer.enableDlq=false
spring.cloud.stream.kafka.streams.binder.dlq.enabled=false

spring.cloud.stream.kafka.bindings.processChannelEvents-out-0.producer.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.bindings.processChannelEvents-out-0.producer.configuration.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer

management.endpoints.web.exposure.include=health,info,metrics,prometheus

server.port=8081

